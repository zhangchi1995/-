/**
 * 单一职责原则（Single Responsibility Principle, SRP），有且仅有一个原因引起类的变更。
 *
 * 现在编写一个电话类有4个功能 分别为: 拨号接通、说话、听别人说话、挂电话
 *
 * 如果把这4个方法如下写到Phone类中的话，耦合比较大。
 * Phone这些接口包含了两个职责：
 *   一个是协议管理，由dial()与 hangup()两个方法实现；
 *   一个是数据传输，由chat()与 answer()实现。其中数据传输部分chat()和 answer()会使用到协议管理的方法。
 *
 * 1.协议接通的变化（dial()与 hangup()）会引起这个接口或实现类的变化吗？　 会的！　　
 *   数据传输（电话不仅仅通话，还可以上网）的变化也会引起其变化！这两个原因都引起了类的变化。
 *
 * 2.电话拔通还用管使用什么协议吗？电话连接后还需要关心传递什么数据吗？ 都不会，即这两个职责的变化不相互影响，
 *   那就考虑拆分成两个接口
 */
interface Phone {
    //拨通电话
    void dial(String number);

    //通话
    void chat();

    //听别人说话
    void listen();

    //挂断电话
    void hangUp();
}
